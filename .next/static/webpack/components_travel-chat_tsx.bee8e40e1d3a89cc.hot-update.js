"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_travel-chat_tsx",{

/***/ "./hooks/useTravelChat.ts":
/*!********************************!*\
  !*** ./hooks/useTravelChat.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTravelChat: function() { return /* binding */ useTravelChat; }\n/* harmony export */ });\n/* harmony import */ var ai_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ai/react */ \"./node_modules/ai/react/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_places_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/places-utils */ \"./utils/places-utils.ts\");\n/* harmony import */ var _managers_stage_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../managers/stage-manager */ \"./managers/stage-manager.ts\");\n/* harmony import */ var _utils_session_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/session-manager */ \"./utils/session-manager.ts\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nfunction useTravelChat(param) {\n    let { currentDetails, savedPlaces: initialSavedPlaces, currentStage, metrics, onStageUpdate } = param;\n    var _getStoredSession_stagePrompts, _getStoredSession, _currentSavedPlaces_filter;\n    const quickResponseInProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const [mainChatMessages, setMainChatMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [showSessionWarning, setShowSessionWarning] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [showPremiumModal, setShowPremiumModal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [premiumModalState, setPremiumModalState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n    // Check if within stage limit\n    const isWithinStageLimit = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const session = (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_3__.getStoredSession)();\n        return (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_3__.checkInputLimits)(currentStage).withinStageLimit;\n    }, [\n        currentStage,\n        (_getStoredSession = (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_3__.getStoredSession)()) === null || _getStoredSession === void 0 ? void 0 : (_getStoredSession_stagePrompts = _getStoredSession.stagePrompts) === null || _getStoredSession_stagePrompts === void 0 ? void 0 : _getStoredSession_stagePrompts[currentStage]\n    ]);\n    // Premium stage check\n    const checkPremiumStage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (currentStage === 3 && !metrics.isPaid && !isWithinStageLimit) {\n            setShowPremiumModal(true);\n            return false;\n        }\n        return true;\n    }, [\n        currentStage,\n        metrics.isPaid,\n        isWithinStageLimit\n    ]);\n    // Handle missing session\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!(0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_3__.getStoredSession)()) {\n            router.push(\"/travel-form\");\n        }\n    }, [\n        router\n    ]);\n    // Session check effect\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const checkSession = ()=>{\n            const { isValid, shouldWarn } = (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_3__.checkSessionWithWarning)();\n            if (!isValid) {\n                (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_3__.handleSessionExpiry)();\n                return;\n            }\n            if (shouldWarn) {\n                setShowSessionWarning(true);\n            }\n            return isValid;\n        };\n        const interval = setInterval(checkSession, 60000);\n        return ()=>clearInterval(interval);\n    }, []);\n    // Simply use savedPlacesManager directly\n    const currentSavedPlaces = _utils_places_utils__WEBPACK_IMPORTED_MODULE_1__.savedPlacesManager.getPlaces();\n    // console.log('[useTravelChat] Current saved places:', currentSavedPlaces.map(p => ({\n    //   id: p.id,\n    //   photos: p.photos\n    // })));\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const handlePlacesChanged = ()=>{\n            // Force re-render when places change\n            setMainChatMessages((prev)=>[\n                    ...prev\n                ]);\n        };\n        window.addEventListener(\"savedPlacesChanged\", handlePlacesChanged);\n        return ()=>window.removeEventListener(\"savedPlacesChanged\", handlePlacesChanged);\n    }, []);\n    // Define quickResponseChat first with original implementation\n    const quickResponseChat = (0,ai_react__WEBPACK_IMPORTED_MODULE_5__.useChat)({\n        api: \"/api/chat/quick-response\",\n        id: _utils_session_manager__WEBPACK_IMPORTED_MODULE_3__.SESSION_CONFIG.STORAGE_KEY,\n        body: {\n            currentDetails,\n            savedPlaces: currentSavedPlaces,\n            currentStage,\n            metrics\n        },\n        onFinish: (message)=>{\n            var _message_toolInvocations;\n            // Keep loading until we have valid responses\n            const hasValidResponses = message === null || message === void 0 ? void 0 : (_message_toolInvocations = message.toolInvocations) === null || _message_toolInvocations === void 0 ? void 0 : _message_toolInvocations.some((t)=>{\n                var _t_result_props_responses, _t_result_props, _t_result;\n                return t.toolName === \"quickResponse\" && t.state === \"result\" && ((_t_result = t.result) === null || _t_result === void 0 ? void 0 : (_t_result_props = _t_result.props) === null || _t_result_props === void 0 ? void 0 : (_t_result_props_responses = _t_result_props.responses) === null || _t_result_props_responses === void 0 ? void 0 : _t_result_props_responses.length) > 0;\n            });\n            if (!hasValidResponses) {\n                // console.log('[QuickResponse] No valid responses in finished message');\n                return;\n            }\n            quickResponseInProgress.current = false;\n        },\n        onError: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((error)=>{\n            // console.error('[QuickResponse] Error:', error);\n            quickResponseInProgress.current = false;\n        }, [])\n    });\n    const mainChat = (0,ai_react__WEBPACK_IMPORTED_MODULE_5__.useChat)({\n        api: \"/api/chat\",\n        id: _utils_session_manager__WEBPACK_IMPORTED_MODULE_3__.SESSION_CONFIG.STORAGE_KEY,\n        body: {\n            currentDetails,\n            destination: currentDetails.destination,\n            savedPlaces: (currentSavedPlaces === null || currentSavedPlaces === void 0 ? void 0 : (_currentSavedPlaces_filter = currentSavedPlaces.filter((place)=>place && place.id && place.displayName)) === null || _currentSavedPlaces_filter === void 0 ? void 0 : _currentSavedPlaces_filter.map((place)=>{\n                var _place_primaryTypeDisplayName;\n                return {\n                    id: place.id,\n                    displayName: typeof place.displayName === \"string\" ? place.displayName : place.displayName.text,\n                    formattedAddress: place.formattedAddress,\n                    location: place.location,\n                    primaryType: place.primaryType,\n                    primaryTypeDisplayName: (_place_primaryTypeDisplayName = place.primaryTypeDisplayName) === null || _place_primaryTypeDisplayName === void 0 ? void 0 : _place_primaryTypeDisplayName.text,\n                    photos: place.photos || []\n                };\n            })) || [],\n            currentStage,\n            metrics: {\n                ...metrics,\n                destination: currentDetails.destination\n            }\n        },\n        onError: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((error)=>{\n            console.error(\"[MainChat] Error:\", error);\n            if (error instanceof Error) {\n                console.error(\"[MainChat] Error details:\", {\n                    name: error.name,\n                    message: error.message,\n                    stack: error.stack\n                });\n            }\n            quickResponseInProgress.current = false;\n        }, []),\n        onFinish: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (message)=>{\n            var _message_content;\n            if (message.role !== \"assistant\" || !((_message_content = message.content) === null || _message_content === void 0 ? void 0 : _message_content.trim())) {\n                quickResponseInProgress.current = false;\n                return;\n            }\n            if (quickResponseInProgress.current) return;\n            if (message.content.includes(\"You've reached the maximum number of places\")) {\n                quickResponseInProgress.current = false;\n                return;\n            }\n            quickResponseInProgress.current = true;\n            try {\n                await quickResponseChat.reload();\n                await quickResponseChat.append({\n                    id: message.id,\n                    content: message.content,\n                    role: message.role\n                });\n            } catch (error) {\n                console.error(\"[QuickResponse] Error:\", error);\n                quickResponseInProgress.current = false;\n            }\n        }, [\n            quickResponseChat\n        ]),\n        headers: {\n            \"Content-Type\": \"text/event-stream\",\n            \"Cache-Control\": \"no-cache\",\n            \"Connection\": \"keep-alive\"\n        },\n        streamProtocol: \"data\"\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const mappedMessages = mainChat.messages.map((msg)=>({\n                ...msg,\n                role: msg.role === \"data\" ? \"system\" : msg.role\n            }));\n        setMainChatMessages(mappedMessages);\n    }, [\n        mainChat.messages\n    ]);\n    const quickResponses = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const messages = quickResponseChat.messages;\n        if (messages.length < 2) {\n            // console.log('[QuickResponse] Waiting for API response...');\n            return [];\n        }\n        const apiResponse = messages[messages.length - 1];\n        // console.log('[QuickResponse] Processing API response:', {\n        //     messageId: apiResponse.id,\n        //     hasToolInvocations: !!apiResponse.toolInvocations,\n        //     toolInvocations: apiResponse.toolInvocations?.map(t => ({\n        //         name: t.toolName,\n        //         state: t.state\n        //     }))\n        // });\n        function extractQuickResponses(message) {\n            var _message_toolInvocations;\n            const quickResponseInvocation = (_message_toolInvocations = message.toolInvocations) === null || _message_toolInvocations === void 0 ? void 0 : _message_toolInvocations.find((t)=>t.toolName === \"quickResponse\" && t.state === \"result\");\n            if (!quickResponseInvocation || !(\"result\" in quickResponseInvocation)) {\n                // console.log('[QuickResponse] No valid responses found in API response');\n                return [];\n            }\n            const responses = quickResponseInvocation.result.props.responses;\n            if (responses.length > 0) {\n                // console.log('[QuickResponse] Got valid responses:', responses);\n                return responses;\n            }\n            // console.log('[QuickResponse] Empty responses array');\n            return [];\n        }\n        return extractQuickResponses(apiResponse);\n    }, [\n        quickResponseChat.messages\n    ]);\n    // Stage progression validation and handling\n    const handleStageProgression = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nextStage)=>{\n        if (nextStage === 4 && !metrics.isPaid) {\n            setShowPremiumModal(true);\n            return {\n                type: \"stageProgress\",\n                props: {\n                    nextStage: currentStage,\n                    reason: \"Premium required for advanced stages\",\n                    criteria: [\n                        \"premium subscription\"\n                    ]\n                }\n            };\n        }\n        const { canProgress, missingRequirements, upgradeRequired } = (0,_managers_stage_manager__WEBPACK_IMPORTED_MODULE_2__.validateStageProgression)(currentStage, nextStage, currentDetails);\n        if (canProgress) {\n            console.log(\"[Stage Progression] Moving to stage \".concat(nextStage));\n            if (upgradeRequired) {\n                console.log(\"[Stage Progression] Upgrade required for stage progression\");\n            // You can add any upgrade-specific logic here\n            }\n            if (onStageUpdate) {\n                onStageUpdate(nextStage);\n            }\n            return {\n                type: \"stageProgress\",\n                props: {\n                    nextStage,\n                    reason: \"Stage requirements met\",\n                    criteria: missingRequirements\n                }\n            };\n        }\n        return {\n            type: \"stageProgress\",\n            props: {\n                nextStage: currentStage,\n                reason: \"Stage requirements not met\",\n                criteria: missingRequirements\n            }\n        };\n    }, [\n        currentStage,\n        currentDetails,\n        metrics.isPaid,\n        onStageUpdate,\n        setShowPremiumModal\n    ]);\n    // Wrap append to include metrics update\n    const append = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (message, options)=>{\n        // Only increment metrics for user messages and not system messages\n        const shouldIncrement = message.role === \"user\";\n        const updatedMetrics = (0,_utils_session_manager__WEBPACK_IMPORTED_MODULE_3__.updateStoredMetrics)(currentStage, shouldIncrement);\n        // Append message with latest metrics\n        await mainChat.append(message, {\n            ...options,\n            body: {\n                ...options === null || options === void 0 ? void 0 : options.body,\n                metrics: updatedMetrics\n            }\n        });\n    }, [\n        mainChat,\n        currentStage\n    ]);\n    return {\n        ...mainChat,\n        messages: mainChatMessages,\n        quickResponses,\n        isQuickResponseLoading: quickResponseInProgress.current,\n        handleStageProgression,\n        showSessionWarning,\n        setShowSessionWarning,\n        isWithinStageLimit,\n        showPremiumModal,\n        setShowPremiumModal,\n        premiumModalState,\n        setPremiumModalState,\n        checkPremiumStage,\n        append\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useTravelChat.ts\n"));

/***/ })

});